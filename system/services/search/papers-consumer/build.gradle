plugins {
    id 'com.github.johnrengelman.shadow' version '2.0.1'
}

apply plugin: 'java'

ext {
    portable_classpath = true
}

repositories {
    mavenCentral()
}

sourceSets {
    paperServiceContractTest {
        java {
            srcDirs = files('src/paper-service-contract-test/java')
        }

        resources.srcDirs = files('src/paper-service-contract-test/resources')
    }

    integrationTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDirs = files('src/integration-test/java')
        }

        resources.srcDirs = files('src/integration-test/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom compile
    integrationTestRuntime.extendsFrom runtime
}

dependencies {
    compile(
            "io.dropwizard:dropwizard-core:${dropwizardVersion}",
            'com.amazonaws:amazon-kinesis-client:1.9.0',
            'com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:2.9.5', // Added to match jackson-core version (required by com.amazonaws:aws-java-sdk-kinesis:1.11.312)
            'org.slf4j:jul-to-slf4j:1.7.25',
            parent.project('shared'),
            project(':shared:dropwizard')
    )

    testCompile(
            'junit:junit:4.12',
            'org.hamcrest:java-hamcrest:2.0.0.0',
            'org.mockito:mockito-core:2.18.0',
            parent.project('shared:test-support')
    )

    paperServiceContractTestCompile(
            'junit:junit:4.12',
            'org.hamcrest:java-hamcrest:2.0.0.0',
            'com.amazonaws:amazon-kinesis-client:1.9.0',
            'com.jayway.jsonpath:json-path:2.3.0',
            'com.jayway.jsonpath:json-path-assert:2.2.0',
            project(':test:support'),
            project(':test:support:golden-data'),
            project('fake-papers-service')
    )

    integrationTestCompile(
            'junit:junit:4.12',
            'org.hamcrest:java-hamcrest:2.0.0.0',
            project(':test:support'),
            project('fake-papers-service')
    )
}

task paperServiceContractTest(type: Test) {
    ext.interServiceContractTest = true
    description = 'Runs the paper service contract tests.'
    group = 'verification'
    testClassesDir = sourceSets.paperServiceContractTest.output.classesDir
    classpath = sourceSets.paperServiceContractTest.runtimeClasspath
    shouldRunAfter 'test'

    if (project.hasProperty('contractTestRealService') && project.contractTestRealService) {
        environment 'PAPER_SERVICE_CONTRACT_TEST_REAL_TARGET', 'true'
    }
}

task integrationTest(type: Test) {
    description = 'Runs the integration tests.'
    group = 'verification'
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    shouldRunAfter 'test', 'paperServiceContractTest'
}

task paperServiceContractTestJar(type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    from sourceSets.paperServiceContractTest.output
    configurations = [project.configurations.paperServiceContractTestRuntime]
    mergeServiceFiles()
    manifest {
        attributes 'Main-Class': 'com.ssrn.test.support.standalone_test_runner.TestRunner'
    }
    baseName = 'paper-service-contract-tests'
    classifier = null
}